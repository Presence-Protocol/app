Abstract Contract Utils() {
   // Converts a byte array to a hexadecimal string. Used to change the token ID to a readable format.
   pub fn convert(array: ByteVec) -> ByteVec {
    let hexBytes = [b`0`, b`1`, b`2`, b`3`, b`4`, b`5`, b`6`, b`7`, b`8`, b`9`, b`a`, b`b`, b`c`, b`d`, b`e`, b`f`]
    let mut result = #
    for(let mut offset = 0; offset < size!(array); offset = offset + 1) {
        let byte = u256From1Byte!(byteVecSlice!(array, offset, offset + 1)) & 0xFF
        let high = (byte >> 4) & 0x0F
        let low = byte & 0x0F
        result = result ++ hexBytes[high] ++ hexBytes[low]
      }
  
    return result
  }
}